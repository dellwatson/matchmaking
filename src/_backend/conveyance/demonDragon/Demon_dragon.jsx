/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 demon_dragon.glb --transform 
Files: demon_dragon.glb [25MB] > /Users/dellwatson/Desktop/vitejs-vite-arzf67/src/_backend/conveyance/demonDragon/demon_dragon-transformed.glb [4.07MB] (84%)
Author: endlessvoidmc (https://sketchfab.com/endlessvoidmc)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/demon-dragon-5c3d6dd81b294988bd7a839b7e2b5c5f
Title: Demon_dragon
*/

import React, { useRef, useEffect } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import GLB_MODEL from "./demon_dragon-transformed.glb";

export function Model(props) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF(GLB_MODEL);
  const { actions } = useAnimations(animations, group);

  // Play all animations when the component mounts
  useEffect(() => {
    actions && Object.values(actions).forEach((action) => action.play());
    return () =>
      actions && Object.values(actions).forEach((action) => action.stop());
  }, [actions]); // Depend on actions to re-run this effect if they change

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <primitive object={nodes.GLTF_created_0_rootJoint} />
        <skinnedMesh
          name="Object_8"
          geometry={nodes.Object_8.geometry}
          material={materials.Material_0}
          skeleton={nodes.Object_8.skeleton}
          scale={0.01}
        />
        <skinnedMesh
          name="Object_9"
          geometry={nodes.Object_9.geometry}
          material={materials.Material_0}
          skeleton={nodes.Object_9.skeleton}
          scale={0.01}
        />
        <skinnedMesh
          name="Object_10"
          geometry={nodes.Object_10.geometry}
          material={materials.Material_0}
          skeleton={nodes.Object_10.skeleton}
          scale={0.01}
        />
      </group>
    </group>
  );
}

useGLTF.preload(GLB_MODEL);
