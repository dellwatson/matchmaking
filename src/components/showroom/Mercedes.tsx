// /*
// Auto-generated by: https://github.com/pmndrs/gltfjsx
// Command: npx gltfjsx@6.2.16 scene.gltf --transform
// Files: scene.gltf [15.94KB] > /Users/dellwatson/Downloads/ready_for_trailers/alien_spaceship_-_big_fighter/scene-transformed.glb [198.22KB] (-1144%)
// Author: trimitek (https://sketchfab.com/trimitek)
// License: SKETCHFAB Standard (https://sketchfab.com/licenses)
// Source: https://sketchfab.com/3d-models/alien-spaceship-big-fighter-f3ec4847aa014e27bfcc9f2c188c889a
// Title: Alien Spaceship - Big Fighter
// */

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
// import MODEL_SHIP from "@assets/game/model/mock/mercedes";

export function Mercedes(props) {
  const { nodes, materials } = useGLTF("/scene-transformed.glb");
  return (
    <group scale={[0.4, 0.4, 0.4]} {...props} dispose={null}>
      <mesh
        geometry={
          nodes.alien_battle_fighter_ancient_procedural_stone_3_0.geometry
        }
        material={materials.ancient_procedural_stone_3}
        position={[0, 0, -5.531]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={0.01}></mesh>
      <mesh
        geometry={nodes.alien_battle_fighter_black_glass_0.geometry}
        material={materials.black_glass}
        position={[0, 0, -5.531]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={0.01}></mesh>
      <mesh
        geometry={nodes.alien_battle_fighter_engines_0.geometry}
        material={materials.engines}
        position={[0, 0, -5.531]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={0.01}
      />
      <mesh
        geometry={nodes.alien_battle_fighter_pulse_0.geometry}
        material={materials.pulse}
        position={[0, 0, -5.531]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={0.01}>
        {/* <meshStandardMaterial color={[10, 0, 0]} /> */}
      </mesh>
    </group>
  );
}

// useGLTF.preload("/scene-transformed.glb");

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 scene.gltf --transform 
Files: scene.gltf [8.13KB] > /Users/dellwatson/Downloads/ready_for_trailers/orchid_manta_-_spaceship_pbr/scene-transformed.glb [1.23MB] (-15088%)
Author: iggy-design (https://sketchfab.com/iggy-design)
License: SKETCHFAB Editorial (https://sketchfab.com/licenses)
Source: https://sketchfab.com/3d-models/orchid-manta-spaceship-pbr-cb321955546a43328cc73d336c1fe2a8
Title: Orchid Manta - spaceship PBR
*/

// import React, { useRef } from "react";
// import { useGLTF, useAnimations } from "@react-three/drei";

// export function Mercedes(props) {
//   const group = useRef();
//   const { nodes, materials, animations } = useGLTF("/scene-transformed.glb");
//   const { actions } = useAnimations(animations, group);
//   return (
//     <group ref={group} {...props} dispose={null}>
//       <group name="Sketchfab_Scene">
//         <group name="RootNode" scale={0.013}>
//           <group
//             name="Orchid_Manta"
//             rotation={[-Math.PI / 2, 0, 0]}
//             scale={100}>
//             <mesh
//               name="Orchid_Manta_Material_0"
//               geometry={nodes.Orchid_Manta_Material_0.geometry}
//               material={materials.Material}
//             />
//           </group>
//         </group>
//       </group>
//     </group>
//   );
// }

// useGLTF.preload("/scene-transformed.glb");

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 scene.gltf --transform 
Files: scene.gltf [5.36KB] > /Users/dellwatson/Downloads/ready_for_trailers/sparrow_fighter_spacecraft/scene-transformed.glb [548.72KB] (-10137%)
Author: CGPitbull (https://sketchfab.com/CGPitbull)
License: SKETCHFAB Standard (https://sketchfab.com/licenses)
Source: https://sketchfab.com/3d-models/sparrow-fighter-spacecraft-9877408b0bbc4fcdbe8335e2379bbed5
Title: SPARROW Fighter Spacecraft
*/

// import React, { useRef } from "react";
// import { useGLTF } from "@react-three/drei";

// export function Mercedes(props) {
//   const { nodes, materials } = useGLTF("/scene-transformed.glb");
//   return (
//     <group scale={[0.5, 0.5, 0.5]} {...props} dispose={null}>
//       <mesh
//         geometry={nodes.Sparrow_Fighter_Sparrow_Fighter_0.geometry}
//         material={materials.Sparrow_Fighter}
//         position={[0, 0.911, 0]}
//         rotation={[-Math.PI / 2, 0, 0]}
//         scale={0.01}
//       />
//     </group>
//   );
// }

useGLTF.preload("/scene-transformed.glb");
